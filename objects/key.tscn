[gd_scene load_steps=4 format=3 uid="uid://chsqwcq1647rw"]

[ext_resource type="Texture2D" uid="uid://bfjx2fxoyw5l4" path="res://assets/3 Objects/kenny_objects/tile_0027.png" id="1_xvwh1"]

[sub_resource type="GDScript" id="GDScript_y1xwp"]
script/source = "extends Node2D

var Equipped: bool = false
var entered: bool = false
var playerStorage

@export var itemName: String

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _physics_process(delta):
	if(entered and Input.is_action_just_pressed(\"interact\") and global_transform.origin.distance_to(playerStorage.global_transform.origin) <= 40):
		Equipped = true
		playerStorage.holdItemName = itemName
	
	if(Equipped):
		global_transform.origin = easyLerp(global_transform.origin, playerStorage.holdItemPos.global_transform.origin, 200, delta)
		#global_transform.origin = playerStorage.holdItemPos.global_transform.origin
	if(Equipped and Input.is_action_just_pressed(\"drop\")):
		Equipped = false
		playerStorage.holdItemName = \"\"

func _on_key_area_2d_body_entered(body):
	print(\"enter\")
	if(body.name.contains(\"SneakyCharacter\")):
		entered = true
		playerStorage = body
		print(\"enter1\")
func easyLerp(from: Vector2, to: Vector2, weight: float, delta: float):
	from.x = move_toward(from.x, to.x, weight * delta)
	from.y = move_toward(from.y, to.y, weight * delta)
	return from
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vonpr"]
size = Vector2(20, 14)

[node name="key" type="Node2D"]
script = SubResource("GDScript_y1xwp")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_xvwh1")

[node name="KeyArea2D" type="Area2D" parent="."]
light_mask = 3
visibility_layer = 3
collision_layer = 3
collision_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="KeyArea2D"]
light_mask = 3
visibility_layer = 3
shape = SubResource("RectangleShape2D_vonpr")

[connection signal="body_entered" from="KeyArea2D" to="." method="_on_key_area_2d_body_entered"]
