[gd_scene load_steps=15 format=3 uid="uid://dh4cg0lumld53"]

[ext_resource type="Script" path="res://characters/top_ideal_pos.gd" id="2_f6t6p"]
[ext_resource type="Texture2D" uid="uid://btaxfxjkknw1v" path="res://assets/characters/lvoer(bottom).png" id="2_jnj6k"]
[ext_resource type="Texture2D" uid="uid://c6veyt3hf7tgw" path="res://assets/Base Character - Free/Spritesheet_UI_Flat_Animated.png" id="3_c1gii"]
[ext_resource type="Texture2D" uid="uid://dfdhcjqo4matr" path="res://assets/characters/loveer/Rizz_Turn_Walk_No_Head.png" id="4_w6jsw"]

[sub_resource type="GDScript" id="GDScript_s628m"]
script/source = "extends CharacterBody2D

const SPEED = 150.0
const JUMP_VELOCITY = -400.0

var someoneOnHead: bool = false
var onSomeHead: bool = false
var playerStorage
var inAir: bool = false

@onready var topIdealPos = %topIdealPos
@onready var animation_player: AnimationPlayer = $AnimationPlayer
@export var vent: Area2D 

@export var index : int = 0
@export var height: float

func _physics_process(delta: float) -> void:
	# Handle collision with another character's head
	if (!$RayCast2D.is_colliding()):
		onSomeHead = false
		if ($RayCast2D.get_collider() != null and $RayCast2D.get_collider().name.contains(\"Character\")):
			onSomeHead = true
	
	# Handle air and ground detection
	if not is_on_floor():
		inAir = true
	else: 
		inAir = false
		
	# Add gravity when the character is not on the floor
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Movement and animation logic when this character is active (Global.current == index)
	if Global.current == index:
		animation_player.play(\"select\")
		$select.visible = true

		# Handle jump
		if Input.is_action_just_pressed(\"ui_up\") and is_on_floor() and !someoneOnHead:
			velocity.y = JUMP_VELOCITY
		
		# Handle movement input and animations
		var direction := Input.get_axis(\"ui_left\", \"ui_right\")
		if direction:
			velocity.x = direction * SPEED
			
			# Play the correct walking animation
			if direction < 0:
				walkingLeft()  # Moving left
			elif direction > 0:
				walkingRight()  # Moving right
		else:
			stopWalking()  # Stop walking if no movement or in air
			velocity.x = move_toward(velocity.x, 0, SPEED)

	else:
		$select.visible = false

	# Align character on top of another character when stacked
	if someoneOnHead and Global.current == index:
		playerStorage.position.x = transform.origin.x
		playerStorage.position.y = transform.origin.y - height
	
	# Prevent movement when this character is inactive or on another character's head
	if Global.current != index and onSomeHead:
		velocity.x = 0
	else:
		move_and_slide()

# Handle collision with other characters
func _on_area_2d_body_entered(body):
	if body.name.contains(\"Character\") and body.index != index and !body.onSomeHead:
		someoneOnHead = true
		playerStorage = body
		playerStorage.onSomeHead = true

func _on_area_2d_body_exited(body):
	if body.name.contains(\"Character\") and body.index != index:
		someoneOnHead = false
		body.onSomeHead = false

# Walking animation for left movement
func walkingLeft():
	$Walking.set_deferred(\"visible\", true)
	$Walking.flip_h = false
	$\"Lvoer(bottom)\".set_deferred(\"visible\", false)
	$Walk.play(\"Walk_Left\")

# Walking animation for right movement
func walkingRight():
	$Walking.set_deferred(\"visible\", true)
	$Walking.flip_h = true
	$\"Lvoer(bottom)\".set_deferred(\"visible\", false)
	$Walk.play(\"Walk_Left\")

# Stop walking animation
func stopWalking():
	$Walking.set_deferred(\"visible\", false)
	$\"Lvoer(bottom)\".set_deferred(\"visible\", true)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vf6m4"]
size = Vector2(20, 18.3333)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_lwxi6"]
size = Vector2(24, 6.5)

[sub_resource type="Animation" id="Animation_7tjeb"]
length = 1.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("select:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.8, 1.2),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="Animation" id="Animation_0npfb"]
resource_name = "new_animation"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("select:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_y3xns"]
_data = {
"RESET": SubResource("Animation_7tjeb"),
"select": SubResource("Animation_0npfb")
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_3vf21"]

[sub_resource type="Animation" id="Animation_hf3qn"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Walking:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_d0qwv"]
resource_name = "Walk_Left"
length = 1.25
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Walking:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.366667, 0.766667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [1, 2, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_cydsj"]
_data = {
"RESET": SubResource("Animation_hf3qn"),
"Walk_Left": SubResource("Animation_d0qwv")
}

[node name="LoverCharacter" type="CharacterBody2D"]
position = Vector2(0, -1)
collision_layer = 129
collision_mask = 129
script = SubResource("GDScript_s628m")
height = 50.0

[node name="topIdealPos" type="Node2D" parent="."]
unique_name_in_owner = true
position = Vector2(0, -25)
script = ExtResource("2_f6t6p")

[node name="Lvoer(bottom)" type="Sprite2D" parent="."]
position = Vector2(0, -24)
texture = ExtResource("2_jnj6k")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -21.1)
scale = Vector2(2.04, 2.28)
shape = SubResource("RectangleShape2D_vf6m4")

[node name="Area2D" type="Area2D" parent="."]
position = Vector2(0, -24)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(0, -27.75)
shape = SubResource("RectangleShape2D_lwxi6")

[node name="select" type="Sprite2D" parent="."]
position = Vector2(0, -24)
scale = Vector2(1.8945, 2.23829)
texture = ExtResource("3_c1gii")
hframes = 4
vframes = 4

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_y3xns")
}

[node name="PlayerAnimation" type="AnimationPlayer" parent="."]
root_node = NodePath("")
libraries = {
"": SubResource("AnimationLibrary_3vf21")
}

[node name="RayCast2D" type="RayCast2D" parent="."]
target_position = Vector2(0, 22)

[node name="Walking" type="Sprite2D" parent="."]
position = Vector2(-1, -24)
texture = ExtResource("4_w6jsw")
hframes = 2
vframes = 2

[node name="Walk" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_cydsj")
}

[connection signal="body_entered" from="Area2D" to="." method="_on_area_2d_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_area_2d_body_exited"]
